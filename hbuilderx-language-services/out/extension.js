"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.deactivate=exports.activate=void 0;const fs=require("fs"),path=require("path"),vscode=require("vscode"),nls=require("vscode-nls"),localize=nls.loadMessageBundle();let servicesDir=["jsservice","stylusservice","emmet"],indexServicesDir=["styleservice","htmlservice","jsservice","stylusservice"],services=[];function activatePackage(e,r){let s;try{const a=require(e);a.activate&&(s=a.activate(r),services.push(a))}catch(r){console.error(e,"activate failed.",r)}return s}function isZH_CN(){try{if(process.env.VSCODE_NLS_CONFIG)return"zh_CN"===JSON.parse(process.env.VSCODE_NLS_CONFIG).locale}catch(e){console.error(null==e?void 0:e.stack)}return!0}function activate(e){vscode.window.setStatusBarMessage(localize("serverLoading.progress",isZH_CN()?"正在初始化语法助手服务...":"Initializing language server..."));const r=e.extensionPath,s=[];indexServicesDir.forEach((e=>{var a;let t=path.join(r,e,"package.json");if(fs.statSync(t).isFile())try{const e=null===(a=JSON.parse(fs.readFileSync(t).toString()).contributes)||void 0===a?void 0:a.indexProcessors;null==e||e.forEach((e=>{e.url&&(e.url=path.join(path.dirname(t),e.url),fs.statSync(e.url).isFile()&&s.push(e))}))}catch(e){console.log("read package failed:",t)}}));const a=activatePackage(e.asAbsolutePath("./indexservice"),e);(null==a?void 0:a.registerLanguageIndexProcessor)&&(null==s||s.forEach((e=>{a.registerLanguageIndexProcessor(e)})));let t=[];function i(){return t}return servicesDir.forEach((s=>{let a=path.join(r,s);fs.existsSync(a)&&fs.statSync(a).isDirectory()&&Promise.resolve(a).then((r=>{let a=activatePackage(r,e);t.push({service:s,exports:a})}))})),vscode.window.setStatusBarMessage(localize("serverLoading.progress.success",isZH_CN()?"语法助手服务启动成功":"Initializing language server successed."),5e3),{getLanguageServiceExports:i,invokeApi(e){if(!e.serverName||!e.apiName)throw new Error("Invalid arguments: serverName and apiName can not be null!");let r=i();for(const s of r)if(s.service===e.serverName){if(s.exports[e.apiName])return s.exports[e.apiName](e.args);throw new Error(`The api ${e.apiName} can not find in ${e.serverName}.`)}}}}function deactivate(){services.forEach((e=>{var r;null===(r=e.deactivate)||void 0===r||r.call(e)}))}exports.activate=activate,exports.deactivate=deactivate;