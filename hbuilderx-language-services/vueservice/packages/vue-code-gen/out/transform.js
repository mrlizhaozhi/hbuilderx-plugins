"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.colletVars=exports.walkInterpolationFragment=void 0;const shared_1=require("@vue/shared");function isGloballyWhitelisted2(e){return["uni","uniCloud","plus"].includes(e)}function walkInterpolationFragment(e,t,i,s,r){let n=[];const o=e.createSourceFile("/foo.ts",t,e.ScriptTarget.ESNext),l=(e,t)=>{s[e.text]||(0,shared_1.isGloballyWhitelisted)(e.text)||isGloballyWhitelisted2(e.text)||"require"===e.text||e.text.startsWith("__VLS_")||(n.push({text:e.text,isShorthand:t,offset:e.getStart(o)}),r.add(e.text))};if(o.forEachChild((t=>walkIdentifiers(e,t,l,s))),n=n.sort(((e,t)=>e.offset-t.offset)),n.length){n[0].isShorthand?(i(t.substring(0,n[0].offset+n[0].text.length),0),i(": ",void 0)):i(t.substring(0,n[0].offset),0);for(let e=0;e<n.length-1;e++)i("",n[e+1].offset,!0),i("__VLS_ctx.",void 0),n[e+1].isShorthand?(i(t.substring(n[e].offset,n[e+1].offset+n[e+1].text.length),n[e].offset),i(": ",void 0)):i(t.substring(n[e].offset,n[e+1].offset),n[e].offset);i("",n[n.length-1].offset,!0),i("__VLS_ctx.",void 0),i(t.substring(n[n.length-1].offset),n[n.length-1].offset)}else i(t,0)}function walkIdentifiers(e,t,i,s){var r,n;const o=[];if(e.isIdentifier(t))i(t,!1);else if(e.isShorthandPropertyAssignment(t))i(t.name,!0);else if(e.isPropertyAccessExpression(t))walkIdentifiers(e,t.expression,i,s);else if(e.isVariableDeclaration(t)){colletVars(e,t.name,o);for(const e of o)s[e]=(null!==(r=s[e])&&void 0!==r?r:0)+1;t.initializer&&walkIdentifiers(e,t.initializer,i,s)}else if(e.isArrowFunction(t)){const r=[];for(const n of t.parameters)colletVars(e,n.name,r),n.type&&walkIdentifiers(e,n.type,i,s);for(const e of r)s[e]=(null!==(n=s[e])&&void 0!==n?n:0)+1;walkIdentifiers(e,t.body,i,s);for(const e of r)s[e]--}else if(e.isObjectLiteralExpression(t))for(const r of t.properties)e.isPropertyAssignment(r)?(e.isComputedPropertyName(r.name)&&walkIdentifiers(e,r.name.expression,i,s),walkIdentifiers(e,r.initializer,i,s)):e.isShorthandPropertyAssignment(r)?walkIdentifiers(e,r,i,s):e.isSpreadAssignment(r)&&walkIdentifiers(e,r.expression,i,s);else e.isTypeReferenceNode(t)?t.forEachChild((t=>walkIdentifiersInTypeReference(e,t,i))):t.forEachChild((t=>walkIdentifiers(e,t,i,s)));for(const e of o)s[e]--}function walkIdentifiersInTypeReference(e,t,i){e.isTypeQueryNode(t)&&e.isIdentifier(t.exprName)?i(t.exprName,!1):t.forEachChild((t=>walkIdentifiersInTypeReference(e,t,i)))}function colletVars(e,t,i){if(e.isIdentifier(t))i.push(t.text);else if(e.isObjectBindingPattern(t))for(const s of t.elements)colletVars(e,s.name,i);else if(e.isArrayBindingPattern(t))for(const s of t.elements)e.isBindingElement(s)&&colletVars(e,s.name,i);else t.forEachChild((t=>colletVars(e,t,i)))}exports.walkInterpolationFragment=walkInterpolationFragment,exports.colletVars=colletVars;