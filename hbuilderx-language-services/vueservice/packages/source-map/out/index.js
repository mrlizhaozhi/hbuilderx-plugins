"use strict";var Mode;Object.defineProperty(exports,"__esModule",{value:!0}),exports.SourceMapBase=exports.Mode=void 0,function(e){e[e.Offset=0]="Offset",e[e.Totally=1]="Totally",e[e.Expand=2]="Expand"}(Mode=exports.Mode||(exports.Mode={}));class SourceMapBase{constructor(e){this.mappings=null!=e?e:[]}getSourceRange(e,t,a){for(const n of this.getRanges(e,null!=t?t:e,!1,a))return n}getMappedRange(e,t,a){for(const n of this.getRanges(e,null!=t?t:e,!0,a))return n}getSourceRanges(e,t,a){return this.getRanges(e,null!=t?t:e,!1,a)}getMappedRanges(e,t,a){return this.getRanges(e,null!=t?t:e,!0,a)}*getRanges(e,t,a,n){for(const s of this.mappings){if(n&&!n(s.data))continue;const o=this.getRange(e,t,a,s.mode,s.sourceRange,s.mappedRange,s.data);if(o)yield o;else if(s.additional)for(const n of s.additional){const o=this.getRange(e,t,a,n.mode,n.sourceRange,n.mappedRange,s.data);if(o){yield o;break}}}}getRange(e,t,a,n,s,o,r){const d=a?o:s,i=a?s:o;if(n===Mode.Totally){if(e===i.start&&t===i.end){const e=d.start,t=d.end;return[{start:Math.min(e,t),end:Math.max(e,t)},r]}}else if(n===Mode.Offset){if(e>=i.start&&t<=i.end){const a=d.start+e-i.start,n=d.end+t-i.end;return[{start:Math.min(a,n),end:Math.max(a,n)},r]}}else if(n===Mode.Expand&&e>=i.start&&t<=i.end){const e=d.start,t=d.end;return[{start:Math.min(e,t),end:Math.max(e,t)},r]}}}exports.SourceMapBase=SourceMapBase;