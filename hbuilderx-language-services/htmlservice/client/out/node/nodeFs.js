"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNodeFSRequestService=void 0;const fs=require("fs"),vscode_1=require("vscode"),requests_1=require("../requests");function getNodeFSRequestService(){function e(e){if("file"!==(0,requests_1.getScheme)(e))throw new Error("fileRequestService can only handle file URLs")}return{getContent:(i,s)=>(e(i),new Promise(((e,t)=>{const r=vscode_1.Uri.parse(i);fs.readFile(r.fsPath,s,((i,s)=>{if(i)return t(i);e(s.toString())}))}))),stat:i=>(e(i),new Promise(((e,s)=>{const t=vscode_1.Uri.parse(i);fs.stat(t.fsPath,((i,t)=>{if(i)return"ENOENT"===i.code?e({type:requests_1.FileType.Unknown,ctime:-1,mtime:-1,size:-1}):s(i);let r=requests_1.FileType.Unknown;t.isFile()?r=requests_1.FileType.File:t.isDirectory()?r=requests_1.FileType.Directory:t.isSymbolicLink()&&(r=requests_1.FileType.SymbolicLink),e({type:r,ctime:t.ctime.getTime(),mtime:t.mtime.getTime(),size:t.size})}))}))),readDirectory:i=>(e(i),new Promise(((e,s)=>{const t=vscode_1.Uri.parse(i).fsPath;fs.readdir(t,{withFileTypes:!0},((i,t)=>{if(i)return s(i);e(t.map((e=>e.isSymbolicLink()?[e.name,requests_1.FileType.SymbolicLink]:e.isDirectory()?[e.name,requests_1.FileType.Directory]:e.isFile()?[e.name,requests_1.FileType.File]:[e.name,requests_1.FileType.Unknown])))}))})))}}exports.getNodeFSRequestService=getNodeFSRequestService;