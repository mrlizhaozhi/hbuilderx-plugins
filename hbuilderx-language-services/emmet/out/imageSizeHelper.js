"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getImageSize=void 0;const path=require("path"),http=require("http"),https=require("https"),url_1=require("url"),sizeOf=require("image-size"),reUrl=/^https?:/;function getImageSize(e){return e=e.replace(/^file:\/\//,""),reUrl.test(e)?getImageSizeFromURL(e):getImageSizeFromFile(e)}function getImageSizeFromFile(e){return new Promise(((t,r)=>{const i=e.match(/^data:.+?;base64,/);if(i)try{const r=Buffer.from(e.slice(i[0].length),"base64");return t(sizeForFileName("",sizeOf(r)))}catch(e){return r(e)}sizeOf(e,((i,a)=>{i?r(i):t(sizeForFileName(path.basename(e),a))}))}))}function getImageSizeFromURL(e){return new Promise(((t,r)=>{const i=(0,url_1.parse)(e),a="https:"===i.protocol?https.get:http.get;if(!i.pathname)return r("Given url doesnt have pathname property");const o=i.pathname;a(i,(e=>{const i=[];let a=0;const n=r=>{try{const i=sizeOf(Buffer.concat(r,a));e.removeListener("data",s),e.destroy(),t(sizeForFileName(path.basename(o),i))}catch(e){}},s=e=>{a+=e.length,i.push(e),n(i)};e.on("data",s).on("end",(()=>n(i))).once("error",(t=>{e.removeListener("data",s),r(t)}))})).once("error",r)}))}function sizeForFileName(e,t){const r=e.match(/@(\d+)x\./),i=r?+r[1]:1;return{realWidth:t.width,realHeight:t.height,width:Math.floor(t.width/i),height:Math.floor(t.height/i)}}exports.getImageSize=getImageSize;