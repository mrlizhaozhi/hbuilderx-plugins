"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const fs=require("fs"),path=require("path"),vscode=require("vscode"),vscode_json_languageservice_1=require("vscode-json-languageservice"),vscode_uri_1=require("vscode-uri"),specialStringHandler=require("../../../core/out/plugins/SpecialStringsHandlers"),out_1=require("../../../utils/out"),packageSchema_1=require("../schemas/packageSchema"),pagesSchema_1=require("../schemas/pagesSchema"),schemaSchema_1=require("../schemas/schemaSchema"),arrays_1=require("../utils/arrays"),schemaMgr=require("./schemaManager");function getJsonServer(){const e={resolveRelativePath:(e,r)=>{const t=r.substring(0,r.lastIndexOf("/")+1);return vscode_uri_1.Utils.resolvePath(vscode_uri_1.URI.parse(t),e).toString()}};return(0,vscode_json_languageservice_1.getLanguageService)({workspaceContext:e,contributions:[],clientCapabilities:vscode_json_languageservice_1.ClientCapabilities.LATEST})}function treeApply(e,r){e&&r(e)&&e.children&&e.children.forEach((e=>{treeApply(e,r)}))}function getNodeFromKey(e,r){const t=e.root;let n=[];return treeApply(t,(e=>("property"===e.type&&e.keyNode.value===r&&n.push(e),!0))),n}function getCurrentI18nLanguageFile(e){let r,t=path.join(e.sourceRoot,"manifest.json"),n=fs.readFileSync(t),a=vscode_json_languageservice_1.TextDocument.create(t,"json",1,n.toString()),s=getJsonServer().parseJSONDocument(a),o=getNodeFromKey(s,"locale"),i="zh-Hans";if(o.length>0){let e=o[0];if(!e.valueNode)return r;i=e.valueNode.value}let c=path.join(e.sourceRoot,"locale"),g=fs.readdirSync(c);if(!g)return r;if(g.length<1)return r;let l=[];for(const e of g)!e.includes("uni")&&e.endsWith(".json")&&l.push(e);if(!l.includes(i+".json")){let e=getNodeFromKey(s,"fallbackLocale"),r="en";if(o.length>0&&(r=e[0].value),!l.includes(i+".json"))return}return r=path.join(c,i+".json"),r}class JsonHoverProvider{async doHoverFromI18n(e,r,t,n,a){let s=null,o=await e.getMatchingSchemas(t,a),i=a.getNodeFromOffset(t.offsetAt(n));if(!i||"string"!==i.type||!i.parent||"property"!==i.parent.type||!i.value.startsWith("%"))return s;let c=[];for(const e of o)if(e.node===i){c=e.schema.enum;break}if(!c)return s;null==r||r.uri.fsPath;let g,l=out_1.hx.createProject(null==r?void 0:r.uri.toString());for(const e of c){let r=a.getNodeFromOffset(t.offsetAt(n)),s=null==r?void 0:r.offset,o=null;if(r&&s){o=t.positionAt(s);let i={...o};i.character+=1;let c={...i};c.character+=r.length-2;let u={start:i,end:c};g=specialStringHandler.doHover([e.includes("HBuilderX.")?e:`HBuilderX.${e}`],t,n,{range:u,kind:specialStringHandler.StringLocationInfoKind.IN_JSON_LIKE,ast:a,project:l},specialStringHandler.StringServicesContainer.create(void 0))}}if(!g)return s;if(0===g.documentation.length)return s;s=new vscode.Hover(new vscode.MarkdownString(g.documentation[0].text));let u=t.positionAt(i.offset);return s.range=new vscode.Range(new vscode.Position(u.line,u.character),new vscode.Position(u.line,u.character+i.length)),s}async provideHover(e,r,t){let n=await vscode.workspace.getWorkspaceFolder(e.uri);schemaMgr.registerSchema("packageSchema",packageSchema_1.PackageSchema,["package.json"]),schemaMgr.registerSchema("pagesSchema",pagesSchema_1.PagesSchema,["pages.json"]),schemaMgr.registerSchema("schemaJsonSchema",schemaSchema_1.SchemaJsonSchema,["*.schema.json"]);const a=(0,vscode_json_languageservice_1.getLanguageService)({schemaRequestService:schemaMgr.findSchema});schemaMgr.setLanguageConfig(a,vscode_uri_1.URI.parse(e.uri.toString()).fsPath,n);const s=vscode_json_languageservice_1.TextDocument.create(e.uri.toString(),e.languageId,1,e.getText()),o=a.parseJSONDocument(s);let i=await this.doHoverFromI18n(a,n,s,r,o);if(i)return i;let c=await a.doHover(s,r,o);if(!c)return null;let g=new vscode.Hover(new vscode.MarkdownString(null==c?void 0:c.contents.toString()));return c.range&&(g.range=new vscode.Range(new vscode.Position(c.range.start.line,c.range.start.character),new vscode.Position(c.range.end.line,c.range.end.character))),g}}function register(){const e=["**/package.json","**/database/*.schema.json","**/pages.json","**/manifest.json","**/settings.json"],r=(0,arrays_1.flatten)(["json","jsonc","json_tm"].map((r=>e.map((e=>({language:r,pattern:e}))))));return vscode.languages.registerHoverProvider(r,new JsonHoverProvider)}exports.register=register;