"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.expandJsonServerRegisterSchema=exports.setLanguageConfig=exports.registerSchema=exports.findSchema=void 0;const path_1=require("path"),vscode_uri_1=require("vscode-uri"),out_1=require("../../../utils/out");var allSchemas=[];function findSchema(e){const t=vscode_uri_1.URI.parse(e).fsPath;let a={};return allSchemas.forEach((t=>{t.name===e&&(a=t.value)})),null!==a?Promise.resolve(JSON.stringify(a)):Promise.reject(`Unable to load schema at ${t}`)}function expandJsonServerRegisterSchema(e){registerSchema(e.name,e.value,e.fileMatch,e.projectType)}function registerSchema(e,t,a,r){return allSchemas.forEach(((t,a)=>{t.name===e&&allSchemas.splice(a,1)})),allSchemas.push({name:e,value:t,fileMatch:a,projectType:r}),!0}function getSchemaOnlyFilePath(e){let t=[];for(const a of allSchemas){if(a.projectType)continue;const r=a.fileMatch;for(const c of r)if(c.includes("*")){if(new RegExp(`${c.replace(/\./g,"\\.").replace(/\*/,".*")}`).test(e))return t.push({fileMatch:a.fileMatch,uri:a.name}),t}else if((0,path_1.basename)(e)===c)return t.push({fileMatch:a.fileMatch,uri:a.name}),t}}function getSchemaFromProjectType(e,t){let a=[];for(const r of allSchemas){if(!r.projectType)continue;const c=t.uri.fsPath;if((0,out_1.getProjectType)(c)!==r.projectType)continue;const n=r.fileMatch;for(const t of n)if(t.includes("*")){if(new RegExp(`${t.replace(/\./g,"\\.").replace(/\*/,".*")}`).test(e))return a.push({fileMatch:r.fileMatch,uri:r.name}),a}else if((0,path_1.basename)(e)===t)return a.push({fileMatch:r.fileMatch,uri:r.name}),a}}function setLanguageConfig(e,t,a){let r=getSchemaOnlyFilePath(t);r?e.configure({allowComments:!0,schemas:r}):a&&(r=getSchemaFromProjectType(t,a),r&&e.configure({allowComments:!0,schemas:r}))}exports.findSchema=findSchema,exports.expandJsonServerRegisterSchema=expandJsonServerRegisterSchema,exports.registerSchema=registerSchema,exports.setLanguageConfig=setLanguageConfig;