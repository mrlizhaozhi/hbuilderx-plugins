"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const jsonc=require("jsonc-parser"),path_1=require("path"),vscode=require("vscode"),arrays_1=require("../utils/arrays");function mapChildren(e,t){return e&&"array"===e.type&&e.children?e.children.map(t):[]}class TsconfigLinkProvider{provideDocumentLinks(e,t){const n=jsonc.parseTree(e.getText());return n?(0,arrays_1.coalesce)([this.getExtendsLink(e,n),...this.getFilesLinks(e,n),...this.getReferencesLinks(e,n)]):null}getExtendsLink(e,t){const n=jsonc.findNodeAtLocation(t,["extends"]);if(!this.isPathValue(n))return;if(n.value.startsWith("."))return new vscode.DocumentLink(this.getRange(e,n),vscode.Uri.file((0,path_1.join)((0,path_1.dirname)(e.uri.fsPath),n.value+(n.value.endsWith(".json")?"":".json"))));const s=vscode.workspace.getWorkspaceFolder(e.uri).uri.fsPath;return new vscode.DocumentLink(this.getRange(e,n),vscode.Uri.file((0,path_1.join)(s,"node_modules",n.value+(n.value.endsWith(".json")?"":".json"))))}getFilesLinks(e,t){return mapChildren(jsonc.findNodeAtLocation(t,["files"]),(t=>this.pathNodeToLink(e,t)))}getReferencesLinks(e,t){return mapChildren(jsonc.findNodeAtLocation(t,["references"]),(t=>{const n=jsonc.findNodeAtLocation(t,["path"]);if(this.isPathValue(n))return new vscode.DocumentLink(this.getRange(e,n),(0,path_1.basename)(n.value).endsWith(".json")?this.getFileTarget(e,n):this.getFolderTarget(e,n))}))}pathNodeToLink(e,t){return this.isPathValue(t)?new vscode.DocumentLink(this.getRange(e,t),this.getFileTarget(e,t)):void 0}isPathValue(e){return e&&"string"===e.type&&e.value&&!e.value.includes("*")}getFileTarget(e,t){return vscode.Uri.file((0,path_1.join)((0,path_1.dirname)(e.uri.fsPath),t.value))}getFolderTarget(e,t){return vscode.Uri.file((0,path_1.join)((0,path_1.dirname)(e.uri.fsPath),t.value,"tsconfig.json"))}getRange(e,t){const n=t.offset,s=e.positionAt(n+1),i=e.positionAt(n+(t.length-1));return new vscode.Range(s,i)}}function register(){const e=["**/[jt]sconfig.json","**/[jt]sconfig.*.json"],t=(0,arrays_1.flatten)(["json","jsonc"].map((t=>e.map((e=>({language:t,pattern:e}))))));return vscode.languages.registerDocumentLinkProvider(t,new TsconfigLinkProvider)}exports.register=register;