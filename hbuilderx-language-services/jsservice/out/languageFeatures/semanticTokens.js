"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),typescriptService_1=require("../typescriptService"),api_1=require("../utils/api"),dependentRegistration_1=require("../utils/dependentRegistration"),minTypeScriptVersion=api_1.default.fromVersionString("3.7"),CONTENT_LENGTH_LIMIT=1e5;function register(e,t){return(0,dependentRegistration_1.conditionalRegistration)([(0,dependentRegistration_1.requireMinVersion)(t,minTypeScriptVersion),(0,dependentRegistration_1.requireSomeCapability)(t,typescriptService_1.ClientCapability.Semantic)],(()=>{const n=new DocumentSemanticTokensProvider(t);return vscode.Disposable.from(vscode.languages.registerDocumentRangeSemanticTokensProvider(e.semantic,n,n.getLegend()))}))}exports.register=register;class DocumentSemanticTokensProvider{constructor(e){this.client=e}getLegend(){return new vscode.SemanticTokensLegend(tokenTypes,tokenModifiers)}async provideDocumentSemanticTokens(e,t){const n=this.client.toOpenedFilePath(e);return!n||e.getText().length>1e5?null:this._provideSemanticTokens(e,{file:n,start:0,length:e.getText().length},t)}async provideDocumentRangeSemanticTokens(e,t,n){const i=this.client.toOpenedFilePath(e);if(!i||e.offsetAt(t.end)-e.offsetAt(t.start)>1e5)return null;const o=e.offsetAt(t.start),s=e.offsetAt(t.end)-o;return this._provideSemanticTokens(e,{file:i,start:o,length:s},n)}async _provideSemanticTokens(e,t,n){if(!this.client.toOpenedFilePath(e))return null;let i=e.version;const o=await this.client.execute("encodedSemanticClassifications-full",t,n);if("response"!==o.type||!o.body)return null;if(i!==e.version)throw await waitForDocumentChangesToEnd(e),new Error("busy");const s=o.body.spans,r=new vscode.SemanticTokensBuilder;let a=0;for(;a<s.length;){const t=s[a++],n=s[a++],i=s[a++];let o=0,c=getTokenTypeFromClassification(i);if(void 0!==c)o=getTokenModifierFromClassification(i);else if(c=tokenTypeMap[i],void 0===c)continue;const p=e.positionAt(t),l=e.positionAt(t+n);for(let t=p.line;t<=l.line;t++){const n=t===p.line?p.character:0,i=t===l.line?l.character:e.lineAt(t).text.length;r.push(t,n,i-n,c,o)}}return r.build()}}function waitForDocumentChangesToEnd(e){let t=e.version;return new Promise((n=>{let i=setInterval((o=>{e.version===t&&(clearInterval(i),n()),t=e.version}),400)}))}function getTokenTypeFromClassification(e){if(e>255)return(e>>8)-1}function getTokenModifierFromClassification(e){return 255&e}const tokenTypes=[];tokenTypes[0]="class",tokenTypes[1]="enum",tokenTypes[2]="interface",tokenTypes[3]="namespace",tokenTypes[4]="typeParameter",tokenTypes[5]="type",tokenTypes[6]="parameter",tokenTypes[7]="variable",tokenTypes[8]="enumMember",tokenTypes[9]="property",tokenTypes[10]="function",tokenTypes[11]="member";const tokenModifiers=[];tokenModifiers[2]="async",tokenModifiers[0]="declaration",tokenModifiers[3]="readonly",tokenModifiers[1]="static",tokenModifiers[5]="local",tokenModifiers[4]="defaultLibrary",12!==tokenTypes.filter((e=>!!e)).length&&console.warn("typescript-vscode-sh-plugin has added new tokens types."),6!==tokenModifiers.filter((e=>!!e)).length&&console.warn("typescript-vscode-sh-plugin has added new tokens modifiers.");const tokenTypeMap=[];tokenTypeMap[11]=0,tokenTypeMap[12]=1,tokenTypeMap[13]=2,tokenTypeMap[14]=3,tokenTypeMap[15]=4,tokenTypeMap[16]=5,tokenTypeMap[17]=6;