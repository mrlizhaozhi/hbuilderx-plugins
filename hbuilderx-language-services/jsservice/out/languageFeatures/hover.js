"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),typescriptService_1=require("../typescriptService"),dependentRegistration_1=require("../utils/dependentRegistration"),previewer_1=require("../utils/previewer"),typeConverters=require("../utils/typeConverters");class TypeScriptHoverProvider{constructor(e){this.client=e}async provideHover(e,t,i){const r=this.client.toOpenedFilePath(e);if(!r)return;const n=typeConverters.Position.toFileLocationRequestArgs(r,t),s=await this.client.interruptGetErr((()=>this.client.execute("quickinfo",n,i)));return"response"===s.type&&s.body?new vscode.Hover(this.getContents(s.body,s._serverType),typeConverters.Range.fromTextSpan(s.body)):void 0}getContents(e,t){const i=[];if(e.displayString){const r=[];t===typescriptService_1.ServerType.Syntax&&this.client.capabilities.has(typescriptService_1.ClientCapability.Semantic),r.push(e.displayString),i.push({language:"typescript",value:r.join(" ")})}return i.push((0,previewer_1.markdownDocumentation)(e.documentation,e.tags)),i}}function register(e,t){return(0,dependentRegistration_1.conditionalRegistration)([(0,dependentRegistration_1.requireSomeCapability)(t,typescriptService_1.ClientCapability.EnhancedSyntax,typescriptService_1.ClientCapability.Semantic)],(()=>vscode.languages.registerHoverProvider(e.syntax,new TypeScriptHoverProvider(t))))}exports.register=register;