"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),typescriptService_1=require("../typescriptService"),dependentRegistration_1=require("../utils/dependentRegistration"),Previewer=require("../utils/previewer"),typeConverters=require("../utils/typeConverters");class TypeScriptSignatureHelpProvider{constructor(e){this.client=e}async provideSignatureHelp(e,r,t,i){const n=this.client.toOpenedFilePath(e);if(!n)return;const a={...typeConverters.Position.toFileLocationRequestArgs(n,r),triggerReason:toTsTriggerReason(i)},s=await this.client.interruptGetErr((()=>this.client.execute("signatureHelp",a,t)));if("response"!==s.type||!s.body)return;const g=s.body,o=new vscode.SignatureHelp;return o.signatures=g.items.map((e=>this.convertSignature(e))),o.activeSignature=this.getActiveSignature(i,g,o.signatures),o.activeParameter=this.getActiveParameter(g),o}getActiveSignature(e,r,t){var i;const n=null===(i=e.activeSignatureHelp)||void 0===i?void 0:i.signatures[e.activeSignatureHelp.activeSignature];if(n&&e.isRetrigger){const e=t.findIndex((e=>e.label===(null==n?void 0:n.label)));if(e>=0)return e}return r.selectedItemIndex}getActiveParameter(e){const r=e.items[e.selectedItemIndex];return r&&r.isVariadic?Math.min(e.argumentIndex,r.parameters.length-1):e.argumentIndex}convertSignature(e){const r=new vscode.SignatureInformation(Previewer.plain(e.prefixDisplayParts),Previewer.markdownDocumentation(e.documentation,e.tags.filter((e=>"param"!==e.name))));let t=r.label.length;const i=Previewer.plain(e.separatorDisplayParts);for(let n=0;n<e.parameters.length;++n){const a=e.parameters[n],s=Previewer.plain(a.displayParts);r.parameters.push(new vscode.ParameterInformation([t,t+s.length],Previewer.markdownDocumentation(a.documentation,[]))),t+=s.length,r.label+=s,n!==e.parameters.length-1&&(r.label+=i,t+=i.length)}return r.label+=Previewer.plain(e.suffixDisplayParts),r}}function toTsTriggerReason(e){switch(e.triggerKind){case vscode.SignatureHelpTriggerKind.TriggerCharacter:return e.triggerCharacter?e.isRetrigger?{kind:"retrigger",triggerCharacter:e.triggerCharacter}:{kind:"characterTyped",triggerCharacter:e.triggerCharacter}:{kind:"invoked"};case vscode.SignatureHelpTriggerKind.ContentChange:return e.isRetrigger?{kind:"retrigger"}:{kind:"invoked"};case vscode.SignatureHelpTriggerKind.Invoke:default:return{kind:"invoked"}}}function register(e,r){return(0,dependentRegistration_1.conditionalRegistration)([(0,dependentRegistration_1.requireSomeCapability)(r,typescriptService_1.ClientCapability.EnhancedSyntax,typescriptService_1.ClientCapability.Semantic)],(()=>vscode.languages.registerSignatureHelpProvider(e.syntax,new TypeScriptSignatureHelpProvider(r),{triggerCharacters:TypeScriptSignatureHelpProvider.triggerCharacters,retriggerCharacters:TypeScriptSignatureHelpProvider.retriggerCharacters})))}TypeScriptSignatureHelpProvider.triggerCharacters=["(",",","<"],TypeScriptSignatureHelpProvider.retriggerCharacters=[")"],exports.register=register;