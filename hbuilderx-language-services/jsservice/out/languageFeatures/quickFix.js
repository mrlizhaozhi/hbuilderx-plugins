"use strict";var __decorate=this&&this.__decorate||function(e,t,i,o){var n,s=arguments.length,r=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,o);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(r=(s<3?n(r):s>3?n(t,i,r):n(t,i))||r);return s>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),nls=require("vscode-nls"),typescriptService_1=require("../typescriptService"),api_1=require("../utils/api"),cancellation_1=require("../utils/cancellation"),codeAction_1=require("../utils/codeAction"),dependentRegistration_1=require("../utils/dependentRegistration"),fixNames=require("../utils/fixNames"),memoize_1=require("../utils/memoize"),objects_1=require("../utils/objects"),typeConverters=require("../utils/typeConverters"),localize=nls.loadMessageBundle();class ApplyCodeActionCommand{constructor(e,t){this.client=e,this.telemetryReporter=t,this.id=ApplyCodeActionCommand.ID}async execute(e){return this.telemetryReporter.logTelemetry("quickFix.execute",{fixName:e.fixName}),(0,codeAction_1.applyCodeActionCommands)(this.client,e.commands,cancellation_1.nulToken)}}ApplyCodeActionCommand.ID="_typescript.applyCodeActionCommand";class ApplyFixAllCodeAction{constructor(e,t){this.client=e,this.telemetryReporter=t,this.id=ApplyFixAllCodeAction.ID}async execute(e,t){if(!t.fixId)return;this.telemetryReporter.logTelemetry("quickFixAll.execute",{fixName:t.fixName});const i={scope:{type:"file",args:{file:e}},fixId:t.fixId},o=await this.client.execute("getCombinedCodeFix",i,cancellation_1.nulToken);if("response"!==o.type||!o.body)return;const n=typeConverters.WorkspaceEdit.fromFileCodeEdits(this.client,o.body.changes);await vscode.workspace.applyEdit(n),await(0,codeAction_1.applyCodeActionCommands)(this.client,o.body.commands,cancellation_1.nulToken)}}ApplyFixAllCodeAction.ID="_typescript.applyFixAllCodeAction";class DiagnosticsSet{constructor(e){this._values=e}static from(e){const t=new Map;for(const i of e)t.set(DiagnosticsSet.key(i),i);return new DiagnosticsSet(t)}static key(e){const{start:t,end:i}=e.range;return`${e.code}-${t.line},${t.character}-${i.line},${i.character}`}get values(){return this._values.values()}get size(){return this._values.size}}class VsCodeCodeAction extends vscode.CodeAction{constructor(e,t,i,o){super(t,i),this.tsAction=e,this.isFixAll=o}}class CodeActionSet{constructor(){this._actions=new Set,this._fixAllActions=new Map}get values(){return this._actions}addAction(e){for(const t of this._actions)e.tsAction.fixName===t.tsAction.fixName&&(0,objects_1.equals)(e.edit,t.edit)&&this._actions.delete(t);if(this._actions.add(e),e.tsAction.fixId){const t=this._fixAllActions.get(e.tsAction.fixId);t&&(this._actions.delete(t),this._actions.add(t))}}addFixAllAction(e,t){const i=this._fixAllActions.get(e);i&&this._actions.delete(i),this.addAction(t),this._fixAllActions.set(e,t)}hasFixAllAction(e){return this._fixAllActions.has(e)}}class SupportedCodeActionProvider{constructor(e){this.client=e}async getFixableDiagnosticsForContext(e){const t=await this.fixableDiagnosticCodes;return DiagnosticsSet.from(e.diagnostics.filter((e=>void 0!==e.code&&t.has(e.code+""))))}get fixableDiagnosticCodes(){return this.client.execute("getSupportedCodeFixes",null,cancellation_1.nulToken).then((e=>"response"===e.type&&e.body||[])).then((e=>new Set(e)))}}__decorate([memoize_1.memoize],SupportedCodeActionProvider.prototype,"fixableDiagnosticCodes",null);class TypeScriptQuickFixProvider{constructor(e,t,i,o,n){this.client=e,this.formattingConfigurationManager=t,this.diagnosticsManager=o,i.register(new ApplyCodeActionCommand(e,n)),i.register(new ApplyFixAllCodeAction(e,n)),this.supportedCodeActionProvider=new SupportedCodeActionProvider(e)}async provideCodeActions(e,t,i,o){const n=this.client.toOpenedFilePath(e);if(!n)return[];const s=await this.supportedCodeActionProvider.getFixableDiagnosticsForContext(i);if(!s.size)return[];if(this.client.bufferSyncSupport.hasPendingDiagnostics(e.uri))return[];await this.formattingConfigurationManager.ensureConfigurationForDocument(e,o);const r=new CodeActionSet;for(const t of s.values)await this.getFixesForDiagnostic(e,n,t,r,o);const c=Array.from(r.values);for(const e of c)e.isPreferred=isPreferredFix(e,c);return c}async getFixesForDiagnostic(e,t,i,o,n){const s={...typeConverters.Range.toFileRangeRequestArgs(t,i.range),errorCodes:[+i.code]},r=await this.client.execute("getCodeFixes",s,n);if("response"!==r.type||!r.body)return o;for(const n of r.body)this.addAllFixesForTsCodeAction(o,e,t,i,n);return o}addAllFixesForTsCodeAction(e,t,i,o,n){return e.addAction(this.getSingleFixForTsCodeAction(o,n)),this.addFixAllForTsCodeAction(e,t,i,o,n),e}getSingleFixForTsCodeAction(e,t){const i=new VsCodeCodeAction(t,t.description,vscode.CodeActionKind.QuickFix,!1);return i.edit=(0,codeAction_1.getEditForCodeAction)(this.client,t),i.diagnostics=[e],i.command={command:ApplyCodeActionCommand.ID,arguments:[t],title:""},i}addFixAllForTsCodeAction(e,t,i,o,n){if(!n.fixId||this.client.apiVersion.lt(api_1.default.v270)||e.hasFixAllAction(n.fixId))return e;if(!this.diagnosticsManager.getDiagnostics(t.uri).some((e=>e!==o&&(e.code===o.code||fixAllErrorCodes.has(e.code)&&fixAllErrorCodes.get(e.code)===fixAllErrorCodes.get(o.code)))))return e;const s=new VsCodeCodeAction(n,n.fixAllDescription||localize("fixAllInFileLabel","{0} (Fix all in file)",n.description),vscode.CodeActionKind.QuickFix,!0);return s.diagnostics=[o],s.command={command:ApplyFixAllCodeAction.ID,arguments:[i,n],title:""},e.addFixAllAction(n.fixId,s),e}}TypeScriptQuickFixProvider.metadata={providedCodeActionKinds:[vscode.CodeActionKind.QuickFix]};const fixAllErrorCodes=new Map([[2339,2339],[2345,2339]]),preferredFixes=new Map([[fixNames.annotateWithTypeFromJSDoc,{value:1}],[fixNames.constructorForDerivedNeedSuperCall,{value:1}],[fixNames.extendsInterfaceBecomesImplements,{value:1}],[fixNames.awaitInSyncFunction,{value:1}],[fixNames.classIncorrectlyImplementsInterface,{value:3}],[fixNames.classDoesntImplementInheritedAbstractMember,{value:3}],[fixNames.unreachableCode,{value:1}],[fixNames.unusedIdentifier,{value:1}],[fixNames.forgottenThisPropertyAccess,{value:1}],[fixNames.spelling,{value:2}],[fixNames.addMissingAwait,{value:1}],[fixNames.fixImport,{value:0,thereCanOnlyBeOne:!0}]]);function isPreferredFix(e,t){if(e.isFixAll)return!1;const i=preferredFixes.get(e.tsAction.fixName);return!!i&&t.every((t=>{if(t===e)return!0;if(t.isFixAll)return!0;const o=preferredFixes.get(t.tsAction.fixName);return!o||o.value<i.value||!(o.value>i.value)&&(!i.thereCanOnlyBeOne||e.tsAction.fixName!==t.tsAction.fixName)}))}function register(e,t,i,o,n,s){return(0,dependentRegistration_1.conditionalRegistration)([(0,dependentRegistration_1.requireSomeCapability)(t,typescriptService_1.ClientCapability.Semantic)],(()=>vscode.languages.registerCodeActionsProvider(e.semantic,new TypeScriptQuickFixProvider(t,i,o,n,s),TypeScriptQuickFixProvider.metadata)))}exports.register=register;