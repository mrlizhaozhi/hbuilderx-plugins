"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DiagnosticsManager=void 0;const vscode=require("vscode"),resourceMap_1=require("../utils/resourceMap"),arrays=require("../utils/arrays"),dispose_1=require("../utils/dispose");function diagnosticsEquals(s,e){return s===e||s.code===e.code&&s.message===e.message&&s.severity===e.severity&&s.source===e.source&&s.range.isEqual(e.range)&&arrays.equals(s.relatedInformation||arrays.empty,e.relatedInformation||arrays.empty,((s,e)=>s.message===e.message&&s.location.range.isEqual(e.location.range)&&s.location.uri.fsPath===e.location.uri.fsPath))&&arrays.equals(s.tags||arrays.empty,e.tags||arrays.empty)}class FileDiagnostics{constructor(s,e){this.file=s,this.language=e,this._diagnostics=new Map}updateDiagnostics(s,e,t){s!==this.language&&(this._diagnostics.clear(),this.language=s);const i=this._diagnostics.get(e);return!arrays.equals(i||arrays.empty,t,diagnosticsEquals)&&(this._diagnostics.set(e,t),!0)}getDiagnostics(s){return s.getValidate(this.language)?[...this.get(0),...this.get(1),...this.getSuggestionDiagnostics(s)]:[]}getSuggestionDiagnostics(s){const e=s.getEnableSuggestions(this.language);return this.get(2).filter((s=>!!e||s.tags&&(s.tags.includes(vscode.DiagnosticTag.Unnecessary)||s.tags.includes(vscode.DiagnosticTag.Deprecated))))}get(s){return this._diagnostics.get(s)||[]}}function areLanguageDiagnosticSettingsEqual(s,e){return s.validate===e.validate&&s.enableSuggestions&&s.enableSuggestions}class DiagnosticSettings{constructor(){this._languageSettings=new Map}getValidate(s){return this.get(s).validate}setValidate(s,e){return this.update(s,(s=>({validate:e,enableSuggestions:s.enableSuggestions})))}getEnableSuggestions(s){return this.get(s).enableSuggestions}setEnableSuggestions(s,e){return this.update(s,(s=>({validate:s.validate,enableSuggestions:e})))}get(s){return this._languageSettings.get(s)||DiagnosticSettings.defaultSettings}update(s,e){const t=this.get(s),i=e(t);return this._languageSettings.set(s,i),areLanguageDiagnosticSettingsEqual(t,i)}}DiagnosticSettings.defaultSettings={validate:!0,enableSuggestions:!0};class DiagnosticsManager extends dispose_1.Disposable{constructor(s,e){super(),this._settings=new DiagnosticSettings,this._updateDelay=50,this._diagnostics=new resourceMap_1.ResourceMap(void 0,{onCaseInsenitiveFileSystem:e}),this._pendingUpdates=new resourceMap_1.ResourceMap(void 0,{onCaseInsenitiveFileSystem:e}),this._currentDiagnostics=this._register(vscode.languages.createDiagnosticCollection(s))}dispose(){super.dispose();for(const s of this._pendingUpdates.values)clearTimeout(s);this._pendingUpdates.clear()}reInitialize(){this._currentDiagnostics.clear(),this._diagnostics.clear()}setValidate(s,e){this._settings.setValidate(s,e)&&this.rebuild()}setEnableSuggestions(s,e){this._settings.setEnableSuggestions(s,e)&&this.rebuild()}updateDiagnostics(s,e,t,i){let a=!1;const n=this._diagnostics.get(s);if(n)a=n.updateDiagnostics(e,t,i);else if(i.length){const n=new FileDiagnostics(s,e);n.updateDiagnostics(e,t,i),this._diagnostics.set(s,n),a=!0}a&&this.scheduleDiagnosticsUpdate(s)}configFileDiagnosticsReceived(s,e){this._currentDiagnostics.set(s,e)}delete(s){this._currentDiagnostics.delete(s),this._diagnostics.delete(s)}getDiagnostics(s){return this._currentDiagnostics.get(s)||[]}scheduleDiagnosticsUpdate(s){this._pendingUpdates.has(s)||this._pendingUpdates.set(s,setTimeout((()=>this.updateCurrentDiagnostics(s)),this._updateDelay))}updateCurrentDiagnostics(s){this._pendingUpdates.has(s)&&(clearTimeout(this._pendingUpdates.get(s)),this._pendingUpdates.delete(s));const e=this._diagnostics.get(s);this._currentDiagnostics.set(s,e?e.getDiagnostics(this._settings):[])}rebuild(){this._currentDiagnostics.clear();for(const s of this._diagnostics.values)this._currentDiagnostics.set(s.file,s.getDiagnostics(this._settings))}}exports.DiagnosticsManager=DiagnosticsManager;