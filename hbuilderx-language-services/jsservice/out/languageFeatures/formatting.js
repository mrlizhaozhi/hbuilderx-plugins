"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),typeConverters=require("../utils/typeConverters");class TypeScriptFormattingProvider{constructor(t,e){this.client=t,this.formattingOptionsManager=e}async provideDocumentRangeFormattingEdits(t,e,r,n){const o=this.client.toOpenedFilePath(t);if(!o)return;await this.formattingOptionsManager.ensureConfigurationOptions(t,r,n);const i=typeConverters.Range.toFormattingRequestArgs(o,e),s=await this.client.execute("format",i,n);return"response"===s.type&&s.body?s.body.map(typeConverters.TextEdit.fromCodeEdit):void 0}async provideOnTypeFormattingEdits(t,e,r,n,o){const i=this.client.toOpenedFilePath(t);if(!i)return[];await this.formattingOptionsManager.ensureConfigurationOptions(t,n,o);const s={...typeConverters.Position.toFileLocationRequestArgs(i,e),key:r},a=await this.client.execute("formatonkey",s,o);if("response"!==a.type||!a.body)return[];const c=[];for(const e of a.body){const r=typeConverters.TextEdit.fromCodeEdit(e),n=r.range;if(0===n.start.character&&n.start.line===n.end.line&&""===r.newText){const e=t.lineAt(n.start.line).text;(e.trim().length>0||e.length>n.end.character)&&c.push(r)}else c.push(r)}return c}}function register(t,e,r,n){let o=!1;for(const e of t.syntax){const t=e.language;(null==t?void 0:t.startsWith("typescript"))&&(o=!0)}if(o){const e=new TypeScriptFormattingProvider(r,n);return vscode.Disposable.from(vscode.languages.registerOnTypeFormattingEditProvider(t.syntax,e,";","}","\n"),vscode.languages.registerDocumentRangeFormattingEditProvider(t.syntax,e))}return vscode.Disposable.from()}exports.register=register;