"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getSymbolRange=exports.TypeScriptBaseCodeLensProvider=exports.ReferencesCodeLens=void 0;const vscode=require("vscode"),nls=require("vscode-nls"),regexp_1=require("../../utils/regexp"),typeConverters=require("../../utils/typeConverters"),localize=nls.loadMessageBundle();class ReferencesCodeLens extends vscode.CodeLens{constructor(e,t,s){super(s),this.document=e,this.file=t}}exports.ReferencesCodeLens=ReferencesCodeLens;class TypeScriptBaseCodeLensProvider{constructor(e,t){this.client=e,this.cachedResponse=t,this.onDidChangeCodeLensesEmitter=new vscode.EventEmitter}get onDidChangeCodeLenses(){return this.onDidChangeCodeLensesEmitter.event}async provideCodeLenses(e,t){const s=this.client.toOpenedFilePath(e);if(!s)return[];const n=await this.cachedResponse.execute(e,(()=>this.client.execute("navtree",{file:s},t)));if("response"!==n.type)return[];const r=n.body,o=[];return r&&r.childItems&&r.childItems.forEach((t=>this.walkNavTree(e,t,null,o))),o.map((t=>new ReferencesCodeLens(e.uri,s,t)))}walkNavTree(e,t,s,n){if(!t)return;const r=this.extractSymbol(e,t,s);r&&n.push(r),(t.childItems||[]).forEach((s=>this.walkNavTree(e,s,t,n)))}}function getSymbolRange(e,t){if(t.nameSpan)return typeConverters.Range.fromTextSpan(t.nameSpan);const s=t.spans&&t.spans[0];if(!s)return null;const n=typeConverters.Range.fromTextSpan(s),r=e.getText(n),o=new RegExp(`^(.*?(\\b|\\W))${(0,regexp_1.escapeRegExp)(t.text||"")}(\\b|\\W)`,"gm").exec(r),i=o?o.index+o[1].length:0,c=e.offsetAt(new vscode.Position(n.start.line,n.start.character))+i;return new vscode.Range(e.positionAt(c),e.positionAt(c+t.text.length))}exports.TypeScriptBaseCodeLensProvider=TypeScriptBaseCodeLensProvider,TypeScriptBaseCodeLensProvider.cancelledCommand={title:"",command:""},TypeScriptBaseCodeLensProvider.errorCommand={title:localize("referenceErrorLabel","Could not determine references"),command:""},exports.getSymbolRange=getSymbolRange;