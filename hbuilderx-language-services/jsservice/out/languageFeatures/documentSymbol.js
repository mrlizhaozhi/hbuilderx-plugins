"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.register=void 0;const vscode=require("vscode"),core_1=require("../../../core"),PConst=require("../protocol.const"),modifiers_1=require("../utils/modifiers"),typeConverters=require("../utils/typeConverters"),getSymbolKind=e=>{switch(e){case PConst.Kind.module:return vscode.SymbolKind.Module;case PConst.Kind.class:return vscode.SymbolKind.Class;case PConst.Kind.enum:return vscode.SymbolKind.Enum;case PConst.Kind.interface:return vscode.SymbolKind.Interface;case PConst.Kind.method:return vscode.SymbolKind.Method;case PConst.Kind.memberVariable:case PConst.Kind.memberGetAccessor:case PConst.Kind.memberSetAccessor:return vscode.SymbolKind.Property;case PConst.Kind.variable:case PConst.Kind.const:case PConst.Kind.localVariable:return vscode.SymbolKind.Variable;case PConst.Kind.function:case PConst.Kind.localFunction:return vscode.SymbolKind.Function;case PConst.Kind.constructSignature:case PConst.Kind.constructorImplementation:return vscode.SymbolKind.Constructor}return vscode.SymbolKind.Variable};class TypeScriptDocumentSymbolProvider{constructor(e,t){this.client=e,this.cachedResponse=t}async provideDocumentSymbols(e,t){var n;const o=this.client.toOpenedFilePath(e);if(!o)return;const r={file:o},s=await this.cachedResponse.execute(e,(()=>this.client.execute("navtree",r,t)));if("response"!==s.type||!(null===(n=s.body)||void 0===n?void 0:n.childItems))return;const i=[];for(const t of s.body.childItems)TypeScriptDocumentSymbolProvider.convertNavTree(e.uri,i,t);return i}static convertNavTree(e,t,n){var o;let r=TypeScriptDocumentSymbolProvider.shouldInclueEntry(n);if(!r&&!(null===(o=n.childItems)||void 0===o?void 0:o.length))return!1;const s=new Set(n.childItems||[]);for(const o of n.spans){const i=typeConverters.Range.fromTextSpan(o),c=n.nameSpan?typeConverters.Range.fromTextSpan(n.nameSpan):i,d=new vscode.DocumentSymbol(n.text,"",getSymbolKind(n.kind),i,i.contains(c)?c:i);(0,modifiers_1.parseKindModifier)(n.kindModifiers).has(PConst.KindModifiers.depreacted)&&(d.tags=[vscode.SymbolTag.Deprecated]),"lsp"===n.kindModifiers&&(d.hxKind=core_1.HxIconKind[n.kind]);for(const t of s)if(t.spans.some((e=>!!i.intersection(typeConverters.Range.fromTextSpan(e))))){const n=TypeScriptDocumentSymbolProvider.convertNavTree(e,d.children,t);r=r||n,s.delete(t)}r&&t.push(d)}return r}static shouldInclueEntry(e){return e.kind!==PConst.Kind.alias&&!(!e.text||"<function>"===e.text||"<class>"===e.text)}}function register(e,t,n){return vscode.languages.registerDocumentSymbolProvider(e.syntax,new TypeScriptDocumentSymbolProvider(t,n),{label:"TypeScript"})}exports.register=register;