"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SymbolKind=exports.WorkspaceEdit=exports.TextEdit=exports.Location=exports.Position=exports.Range=void 0;const vscode=require("vscode"),PConst=require("../protocol.const");var Range,Position,Location,TextEdit,WorkspaceEdit,SymbolKind;!function(e){e.fromTextSpan=t=>e.fromLocations(t.start,t.end),e.toTextSpan=e=>({start:Position.toLocation(e.start),end:Position.toLocation(e.end)}),e.fromLocations=(e,t)=>new vscode.Range(Math.max(0,e.line-1),Math.max(e.offset-1,0),Math.max(0,t.line-1),Math.max(0,t.offset-1)),e.toFileRangeRequestArgs=(e,t)=>({file:e,startLine:t.start.line+1,startOffset:t.start.character+1,endLine:t.end.line+1,endOffset:t.end.character+1}),e.toFormattingRequestArgs=(e,t)=>({file:e,line:t.start.line+1,offset:t.start.character+1,endLine:t.end.line+1,endOffset:t.end.character+1})}(Range=exports.Range||(exports.Range={})),function(e){e.fromLocation=e=>new vscode.Position(e.line-1,e.offset-1),e.toLocation=e=>({line:e.line+1,offset:e.character+1}),e.toFileLocationRequestArgs=(e,t)=>({file:e,line:t.line+1,offset:t.character+1})}(Position=exports.Position||(exports.Position={})),function(e){e.fromTextSpan=(e,t)=>new vscode.Location(e,Range.fromTextSpan(t))}(Location=exports.Location||(exports.Location={})),function(e){e.fromCodeEdit=e=>new vscode.TextEdit(Range.fromTextSpan(e),e.newText)}(TextEdit=exports.TextEdit||(exports.TextEdit={})),function(e){function t(e,t,o){for(const n of o){const o=t.toResource(n.fileName);for(const t of n.textChanges)e.replace(o,Range.fromTextSpan(t),t.newText)}return e}e.fromFileCodeEdits=function(e,o){return t(new vscode.WorkspaceEdit,e,o)},e.withFileCodeEdits=t}(WorkspaceEdit=exports.WorkspaceEdit||(exports.WorkspaceEdit={})),function(e){e.fromProtocolScriptElementKind=function(e){switch(e){case PConst.Kind.module:return vscode.SymbolKind.Module;case PConst.Kind.class:return vscode.SymbolKind.Class;case PConst.Kind.enum:return vscode.SymbolKind.Enum;case PConst.Kind.enumMember:return vscode.SymbolKind.EnumMember;case PConst.Kind.interface:return vscode.SymbolKind.Interface;case PConst.Kind.indexSignature:case PConst.Kind.callSignature:case PConst.Kind.method:return vscode.SymbolKind.Method;case PConst.Kind.memberVariable:case PConst.Kind.memberGetAccessor:case PConst.Kind.memberSetAccessor:return vscode.SymbolKind.Property;case PConst.Kind.variable:case PConst.Kind.let:case PConst.Kind.const:case PConst.Kind.localVariable:case PConst.Kind.alias:return vscode.SymbolKind.Variable;case PConst.Kind.function:case PConst.Kind.localFunction:return vscode.SymbolKind.Function;case PConst.Kind.constructSignature:case PConst.Kind.constructorImplementation:return vscode.SymbolKind.Constructor;case PConst.Kind.typeParameter:return vscode.SymbolKind.TypeParameter;case PConst.Kind.string:return vscode.SymbolKind.String;default:return vscode.SymbolKind.Variable}}}(SymbolKind=exports.SymbolKind||(exports.SymbolKind={}));