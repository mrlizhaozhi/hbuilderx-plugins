"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const vscode=require("vscode");var Trace;!function(e){e[e.Off=0]="Off",e[e.Messages=1]="Messages",e[e.Verbose=2]="Verbose"}(Trace||(Trace={})),function(e){e.fromString=function(r){switch(r=r.toLowerCase()){case"off":default:return e.Off;case"messages":return e.Messages;case"verbose":return e.Verbose}}}(Trace||(Trace={}));class Tracer{constructor(e){this.logger=e,this.updateConfiguration()}updateConfiguration(){this.trace=Tracer.readTrace()}static readTrace(){let e=Trace.fromString(vscode.workspace.getConfiguration().get("typescript.tsserver.trace","off"));return e===Trace.Off&&process.env.TSS_TRACE&&(e=Trace.Messages),e}traceRequest(e,r,s,t){if(this.trace===Trace.Off)return;let a;this.trace===Trace.Verbose&&r.arguments&&(a=`Arguments: ${JSON.stringify(r.arguments,null,4)}`),this.logTrace(e,`Sending request: ${r.command} (${r.seq}). Response expected: ${s?"yes":"no"}. Current queue length: ${t}`,a)}traceResponse(e,r,s){if(this.trace===Trace.Off)return;let t;this.trace===Trace.Verbose&&r.body&&(t=`Result: ${JSON.stringify(r.body,null,4)}`),this.logTrace(e,`Response received: ${r.command} (${r.request_seq}). Request took ${Date.now()-s.queuingStartTime} ms. Success: ${r.success} ${r.success?"":". Message: "+r.message}`,t)}traceRequestCompleted(e,r,s,t){this.trace!==Trace.Off&&this.logTrace(e,`Async response received: ${r} (${s}). Request took ${Date.now()-t.queuingStartTime} ms.`)}traceEvent(e,r){if(this.trace===Trace.Off)return;let s;this.trace===Trace.Verbose&&r.body&&(s=`Data: ${JSON.stringify(r.body,null,4)}`),this.logTrace(e,`Event received: ${r.event} (${r.seq}).`,s)}logTrace(e,r,s){this.trace!==Trace.Off&&this.logger.logLevel("Trace",`<${e}> ${r}`,s)}}exports.default=Tracer;