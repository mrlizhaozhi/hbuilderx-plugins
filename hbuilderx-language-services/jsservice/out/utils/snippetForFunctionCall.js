"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.snippetForFunctionCall=void 0;const vscode=require("vscode"),PConst=require("../protocol.const");function snippetForFunctionCall(t,e){if(t.insertText&&"string"!=typeof t.insertText)return{snippet:t.insertText,parameterCount:0};const n=getParameterListParts(e),a=new vscode.SnippetString;return a.appendText(`${t.insertText||t.label}(`),a.appendTabstop(1),a.appendText(")"),a.appendTabstop(0),{snippet:a,parameterCount:n.parts.length+(n.hasOptionalParameters?1:0)}}function appendJoinedPlaceholders(t,e,n){for(let a=0;a<e.length;++a){const s=e[a];t.appendPlaceholder(s.text),a!==e.length-1&&t.appendText(n)}}function getParameterListParts(t){const e=[];let n=!1,a=!1,s=0,r=0;t:for(let i=0;i<t.length;++i){const o=t[i];switch(o.kind){case PConst.DisplayPartKind.methodName:case PConst.DisplayPartKind.functionName:case PConst.DisplayPartKind.text:case PConst.DisplayPartKind.propertyName:0===s&&0===r&&(n=!0);break;case PConst.DisplayPartKind.parameterName:if(1===s&&0===r&&n){const n=t[i+1],s=n&&"?"===n.text,r="this"===o.text;s||r||e.push(o),a=a||s}break;case PConst.DisplayPartKind.punctuation:if("("===o.text)++s;else if(")"===o.text){if(--s,s<=0&&n)break t}else{if("..."===o.text&&1===s){a=!0;break t}"{"===o.text?++r:"}"===o.text&&--r}}}return{hasOptionalParameters:a,parts:e}}exports.snippetForFunctionCall=snippetForFunctionCall;