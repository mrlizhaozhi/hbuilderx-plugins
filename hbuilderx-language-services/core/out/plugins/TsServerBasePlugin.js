"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TsServerBasePlugin=void 0;const fs=require("fs"),path=require("path"),documents_1=require("../base/documents"),utils=require("./utils");function initFrameWorkLibs(e){let t=e.project.fsPath,s=new Map,i=path.resolve(__dirname,"../../../frameworkdts");fs.existsSync(i)&&fs.statSync(i).isDirectory()&&fs.readdirSync(i).forEach((e=>{let t=path.join(i,e,"index.d.ts");s.set(e,t)})),utils.getLibraries(t).forEach((t=>{if(s.has(t)){let i=s.get(t);utils.addRoot(e,i)}}));let r=e.tsinfo.session.handlers;r&&!r.has("updateFrameworkLibs")&&e.tsinfo.session.addProtocolHandler("updateFrameworkLibs",(t=>{const{type:i,lib:r}=t.arguments;let n={response:{success:!1},responseRequired:!1};const o=s.get(r);return fs.existsSync(o)?("add"==i?(utils.addRoot(e,o),n.response.success=!0):"remove"==i&&(n.response.success=utils.removeRoot(e,o)),n):n}))}function create(e){const t=e.languageService,s=Object.create(null);for(let e of Object.keys(t)){const i=t[e];s[e]=(...e)=>i.apply(t,e)}initFrameWorkLibs(e);let i=e.tsinfo.languageServiceHost,r=i.getScriptFileNames.bind(i),n=(0,documents_1.getDefaultLibs)(e.project);return i.getScriptFileNames=function(){let e=[],t=r();return t&&e.push(...t),e.push(...n),e},s.getCompletionsAtPosition=function(s,i,r){let n=t.getCompletionsAtPosition(s,i,r);if(!n)return;let o=t.getProgram().getSourceFile(s),a=e.ts.getTokenAtPosition(o,i);if(a.kind===e.ts.SyntaxKind.Identifier){let e=[],t=a.getText(),s=t.length-(a.end-i);if(s<0)return n;n.entries.forEach((i=>{if("async"===i.name||"await"===i.name||"static"===i.name){let r=t.substring(s);""!==t&&e.push({...i,kindModifiers:"Snippet",insertText:i.name+"$0 "+r})}else e.push(i)})),n.entries=e}return n},s}exports.TsServerBasePlugin={create(e){if(e.tsinfo.project.projectService.serverMode===e.ts.LanguageServiceMode.PartialSemantic){let t=e.ts.createDocumentRegistry(e.tsinfo.serverHost.useCaseSensitiveFileNames,e.project.fsPath);const s={...e.tsinfo.languageServiceHost,getCompilationSettings:()=>({...e.tsinfo.languageServiceHost.getCompilationSettings(),noResolve:!1}),getScriptFileNames(){let t=e.tsinfo.languageServiceHost.getScriptFileNames(),s=(0,documents_1.getDefaultLibs)(e.project);return t.push(...s),t},getScriptKind:t=>e.tsinfo.languageServiceHost.getScriptKind(t),getProjectVersion:()=>e.tsinfo.languageServiceHost.getProjectVersion(),getScriptVersion:t=>e.tsinfo.languageServiceHost.getScriptVersion(t),getScriptSnapshot:t=>e.tsinfo.languageServiceHost.getScriptSnapshot(t),getCurrentDirectory:()=>e.tsinfo.languageServiceHost.getCurrentDirectory(),getDefaultLibFileName:t=>e.tsinfo.languageServiceHost.getDefaultLibFileName(t),resolveModuleNames:(t,s,i,r,n)=>e.tsinfo.languageServiceHost.resolveModuleNames(t,s,i,r,n)};e.languageService=e.ts.createLanguageService(s,t,e.ts.LanguageServiceMode.Semantic)}return create(e)}};