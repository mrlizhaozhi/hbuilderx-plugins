"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getJQLLanguageService=void 0;const ts=require("typescript"),vscode_languageserver_textdocument_1=require("vscode-languageserver-textdocument"),uniCloudPath_1=require("../common/uniCloudPath");let documentVersion=1,jqlHelperFileName="jql-helper-docs.ts",currentTextDocument=vscode_languageserver_textdocument_1.TextDocument.create(jqlHelperFileName,"typescript",1,""),proxyService=null,tsService=null;const jqlDocProvider={get version(){return""+documentVersion},compilerOptions:{allowNonTsExtensions:!0,allowJs:!0,lib:["lib.esnext.d.ts"],target:ts.ScriptTarget.Latest,moduleResolution:ts.ModuleResolutionKind.Classic,experimentalDecorators:!1},documents:[currentTextDocument.uri],getDocumentSnapshot(e){let t="";return e.indexOf(jqlHelperFileName)>=0&&(t=currentTextDocument.getText()),{getText:(e,r)=>t.substring(e,r),getLength:()=>t.length,getChangeRange:()=>{}}},getDocumentVersion:e=>e.indexOf(jqlHelperFileName)>=0?""+currentTextDocument.version:"1",hasDocument:e=>e.indexOf(jqlHelperFileName)>=0};function getJQLService(e){if(tsService&&proxyService)return{proxy:proxyService,tsLS:tsService};tsService=e.createTSLanguageService(jqlDocProvider),proxyService=Object.create(null);for(let e of Object.keys(tsService)){const t=tsService[e];proxyService[e]=(...e)=>t.apply(tsService,e)}return{proxy:proxyService,tsLS:tsService}}function getJQLLanguageService(e,t){const{proxy:r,tsLS:n}=getJQLService(e);return documentVersion++,currentTextDocument=vscode_languageserver_textdocument_1.TextDocument.create(jqlHelperFileName,"typescript",documentVersion,uniCloudPath_1.jqlPrefix+t),r.getCompletionsAtPosition=(e,t,r)=>n.getCompletionsAtPosition(currentTextDocument.uri,uniCloudPath_1.jqlPrefix.length+t,r),r.getCompletionEntryDetails=(e,t,r,o,i,c,u)=>n.getCompletionEntryDetails(currentTextDocument.uri,uniCloudPath_1.jqlPrefix.length+t,r,o,i,c,u),r.getDefinitionAndBoundSpan=(e,t)=>n.getDefinitionAndBoundSpan(currentTextDocument.uri,uniCloudPath_1.jqlPrefix.length+t),r}exports.getJQLLanguageService=getJQLLanguageService;